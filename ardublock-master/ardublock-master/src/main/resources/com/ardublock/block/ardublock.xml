<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE BlockLangDef SYSTEM "lang_def.dtd">
<!-- This describes every BlockGenus, BlockDrawer, BlockFamilies in Starlogo-TNG. Note: For BlockGenus, if genus A relies on another genus B, that genus B must be specified in the xml 
	file before genus A is specified./ We impose this requirement so that sanity checks can be made regarding the validity of a default argument when the BlockGenuses are first loaded. -->
<BlockLangDef>

	<BlockConnectorShapes>
		<BlockConnectorShape shape-type="number" shape-number="1" />
		<BlockConnectorShape shape-type="number-list" shape-number="2" />
		<BlockConnectorShape shape-type="number-inv" shape-number="3" />
		<BlockConnectorShape shape-type="boolean" shape-number="4" />
		<BlockConnectorShape shape-type="boolean-list" shape-number="5" />
		<BlockConnectorShape shape-type="boolean-inv" shape-number="6" />
		<BlockConnectorShape shape-type="string" shape-number="7" />
		<BlockConnectorShape shape-type="string-list" shape-number="8" />
		<BlockConnectorShape shape-type="string-inv" shape-number="9" />
		<BlockConnectorShape shape-type="poly" shape-number="10" />
		<BlockConnectorShape shape-type="poly-list" shape-number="11" />
		<BlockConnectorShape shape-type="poly-inv" shape-number="12" />
		<BlockConnectorShape shape-type="proc-param" shape-number="13" />
		<BlockConnectorShape shape-type="cmd" shape-number="14" />
		<BlockConnectorShape shape-type="cmd1" shape-number="15" />
		<BlockConnectorShape shape-type="cmd2" shape-number="16" />
		<BlockConnectorShape shape-type="cmd3" shape-number="17" />
	</BlockConnectorShapes>
	
	<BlockGenuses>
		<BlockGenus name="dummy" kind="command" initlabel="" color="0 0 0" />
	    <!-- ******************** NEW FOR LOOP **************** -->
		<BlockGenus name="repeat_control" kind="command" color="255 221 0" initlabel="bg.repeat_control">
			<description>
				<text>repeat</text>
				<arg-description n="1" name="variable">
					A variable to track the repetitions
				</arg-description>
				<arg-description n="2" name="start">
					Start value of variable
				</arg-description>
				<arg-description n="3" name="end">
					End value of variable
				</arg-description>
				<arg-description n="4" name="step">
					How much to change variable each time
				</arg-description>
				<arg-description n="4" name="commands">
					A list of commands to do.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
					<DefaultArg genus-name="variable_number" label="variable name" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.start">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.end">
					<DefaultArg genus-name="number" label="5" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.increment">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector label="commands" connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
	
		<!-- ******************** Controls Menu *************** -->
		<BlockGenus name="program" kind="command" color="255 240 0" initlabel="bg.program" is-starter="yes" is-terminator="yes" label-unique="no">
			<description>
				<text>this is the setup and the loop of the arduino</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="cmd" connector-kind="socket" label="bc.setup" />
				<BlockConnector connector-type="cmd" connector-kind="socket" label="bc.loop" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sketch" kind="command" color="255 240 0" initlabel="bg.sketch" is-starter="yes" is-terminator="yes" label-unique="no">
			<description>
				<text>this is the header, setup and the loop of the arduino-code</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="cmd" connector-kind="socket" label="bc.head" />
				<BlockConnector connector-type="cmd" connector-kind="socket" label="bc.setup" />
				<BlockConnector connector-type="cmd" connector-kind="socket" label="bc.loop" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="loop" kind="command" color="255 240 0" initlabel="bg.loop" is-starter="yes" is-terminator="yes" label-unique="yes">
			<description>
				<text>this is the loop of the arduino</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="cmd" connector-kind="socket" label="bc.do" />
			</BlockConnectors>
		</BlockGenus>
		<!-- legacy support -->
		<BlockGenus name="loop1" kind="command" color="255 240 0" initlabel="bg.loop" is-starter="yes" is-terminator="yes" label-unique="no" />
		<BlockGenus name="loop2" kind="command" color="255 240 0" initlabel="bg.loop" is-starter="yes" is-terminator="yes" label-unique="no" />
		<BlockGenus name="loop3" kind="command" color="255 240 0" initlabel="bg.loop" is-starter="yes" is-terminator="yes" label-unique="no" />
		<!-- end of legacy support -->
		<BlockGenus name="delay" kind="command" color="255 221 0" initlabel="bg.delay">
			<description>
				<text>program delay in x milliseconds</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.milliseconds">
					<DefaultArg genus-name="number" label="1000" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="if" kind="command" initlabel="bg.if" color="255 221 0">
			<description>
				<text>
					If
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.test" connector-kind="socket" connector-type="boolean" />
				<BlockConnector label="bc.then" connector-kind="socket" connector-type="cmd" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="ifelse" kind="command" initlabel="bg.ifelse" color="255 221 0">
			<description>
				<text>
					Does the first list of commands if the test specified is
					true, otherwise it will do the second list of commands.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.test" connector-kind="socket" connector-type="boolean" />
				<BlockConnector label="bc.then" connector-kind="socket" connector-type="cmd" />
				<BlockConnector label="bc.else" connector-kind="socket" connector-type="cmd" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="while" kind="command" initlabel="bg.while" color="255 221 0">
			<description>
				<text>
					While Block
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.condition" connector-kind="socket" connector-type="boolean" />
				<BlockConnector label="bc.commands" connector-kind="socket" connector-type="cmd" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="do_while" kind="command" initlabel="bg.do_while" color="255 221 0">
          <description>            
			<text>
                Do While Block
            </text>
           </description>
          <BlockConnectors>
            <BlockConnector label="commands" connector-kind="socket" connector-type="cmd" />
            <BlockConnector label="bc.condition" connector-kind="socket" connector-type="boolean">
              <DefaultArg genus-name="less" label="Pick a test" />
            </BlockConnector>    
          </BlockConnectors>
      </BlockGenus> 
		<BlockGenus name="break" kind="command" color="255 221 0" initlabel="bg.break">
			<description>
				<text>Repeat the commands for "times"</text>
			</description>
		</BlockGenus>
		<BlockGenus name="delay_microseconds" kind="command" color="255 221 0" initlabel="bg.delay_microseconds">
			<description>
				<text>program delay in x milliseconds</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.microseconds">
					<DefaultArg genus-name="number" label="1000" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="wait" kind="command" color="255 221 0" initlabel="bg.wait" editable-label="no" is-label-value="no" is-starter="no" is-terminator="no">
			<description>
				<text>wait millis</text>
			</description>			
			<BlockConnectors>
				<BlockConnector label="bc.variable" connector-type="number" connector-kind="socket">
					<DefaultArg genus-name="variable_number" label="ZeitVariable" />
				</BlockConnector>
				<BlockConnector label="bc.time" connector-type="number"	connector-kind="socket" position-type="single">
					<DefaultArg genus-name="number" label="1000" />
				</BlockConnector>
				<BlockConnector label="bc.do" connector-type="cmd"	connector-kind="socket" position-type="single">
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="repeat_times" kind="command" color="255 221 0" initlabel="bg.repeat_times">
			<description>
				<text>Repeat the commands for "times"</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.repeat_times">
					<DefaultArg genus-name="number" label="5" />
				</BlockConnector>
				<BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="repeat" kind="command" color="255 221 0" initlabel="bg.repeat">
			<description>
				<text>repeat</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
					<DefaultArg genus-name="local_variable_number" label="Zaehlwert" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.repeat_times">
					<DefaultArg genus-name="number" label="5" />
				</BlockConnector>
				<BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subroutine_com" kind="command" color="200 220 0" initlabel="bg.subroutine_com" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="yes">
			<description>
				<text>subroutine</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.fcn_description" connector-type="string" connector-kind="socket">
					<DefaultArg genus-name="string" label="Funktionsbeschreibung" />
				</BlockConnector>
			</BlockConnectors>
			<BlockConnectors>
				<BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subroutine-ref" kind="command" color="200 220 0" initlabel="bg.subroutine" editable-label="yes">
			<description>
				<text>invoke subroutine</text>
			</description>
		</BlockGenus>
		<BlockGenus name="subroutine_varret_com" kind="command" color="200 220 0" initlabel="bg.subroutine_varret_com" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="yes">
			<BlockConnectors>
				<BlockConnector label="bc.fcn_description" connector-type="string" connector-kind="socket">
					<DefaultArg genus-name="string" label="Funktionsbeschreibung" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.sub_var">
					<DefaultArg genus-name="local_variable_number" label="lokaleUebergabeVariable" />
				</BlockConnector>
				<BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
				<BlockConnector label="bc.sub_return" connector-type="number" connector-kind="socket" position-type="single">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subroutine-ref_varret" kind="data" color="200 220 0" initlabel="bg.subroutine_varret" editable-label="yes">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.transmit">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subroutine_var_com" kind="command" color="200 220 0" initlabel="bg.subroutine_var_com" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="yes">
			<BlockConnectors>
				<BlockConnector label="bc.fcn_description" connector-type="string" connector-kind="socket">
					<DefaultArg genus-name="string" label="Funktionsbeschreibung" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.sub_var">
					<DefaultArg genus-name="local_variable_number" label="lokaleUebergabeVariable" />
				</BlockConnector>
				<BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subroutine-ref_var" kind="command" color="200 220 0" initlabel="bg.subroutine_var" editable-label="yes">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.transmit">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="ref_var" kind="data" color="204 0 102" initlabel="bg.ref_var" editable-label="yes">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<!-- legacy support -->
		<BlockGenus name="subroutine" kind="command" color="200 220 0" initlabel="bg.subroutine" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="yes">
			<description>
				<text>subroutine</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subroutine_varret" kind="command" color="200 220 0" initlabel="bg.subroutine_varret" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="yes">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.sub_var">
					<DefaultArg genus-name="local_variable_number" label="lokaleUebergabeVariable" />
				</BlockConnector>
				<BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
				<BlockConnector label="bc.sub_return" connector-type="number" connector-kind="socket" position-type="single">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subroutine_var" kind="command" color="200 220 0" initlabel="bg.subroutine_var" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="yes">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.sub_var">
					<DefaultArg genus-name="local_variable_number" label="lokaleUebergabeVariable" />
				</BlockConnector>
				<BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<!-- end of legacy support -->
		<BlockGenus name="interrupt" kind="command" color="200 220 0" initlabel="bg.interrupt" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="yes">
			<description>
				<text>Interrupt Routine</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.irNumber" connector-type="number" connector-kind="socket">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector label="bc.irType" connector-type="number" connector-kind="socket" >
					<DefaultArg genus-name="number" label="4" />
				</BlockConnector>
				<BlockConnector label="bc.commands" connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
	
		<!--****************** Output *************** -->
		<BlockGenus name="pin-write-digital" kind="command" color="74 108 212" initlabel="bg.pin-write-digital">
			<description>
				<text>write digital to pin</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="digital-high" label="HIGH" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="pin-write-analog" kind="command" color="74 108 212"	initlabel="bg.pin-write-analog">
			<description>
				<text>write analog to pin</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.pwm_pin_number">
					<DefaultArg genus-name="number" label="3" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="number" label="255" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="pin-mode-output" kind="command" color="74 108 212" initlabel="bg.pin-mode-output">
			<description>
				<text>set pinMode to OUTPUT</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="servo_default" kind="command" color="74 108 212"	label-prefix="" initlabel="bg.servo">
			<description>
				<text>Servo Default</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="5" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.angle">
					<DefaultArg genus-name="number" label="90" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="detach_servo_default" kind="command" color="74 108 212"	label-prefix="" initlabel="bg.detach_servo_default">
			<description>
				<text>Servo Default</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="5" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>	
		<BlockGenus name="attach_servo_default" kind="command" color="74 108 212"	label-prefix="" initlabel="bg.attach_servo_default">
			<description>
				<text>Servo Default</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="5" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>	
		<BlockGenus name="stepper_2pin" kind="command" color="74 108 212"	label-prefix="" initlabel="bg.stepper_2pin">
			<description>
				<text>Stepper 2-Pin-wiring</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="Stepper#">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="Pin1#">
					<DefaultArg genus-name="number" label="8" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="Pin2#">
					<DefaultArg genus-name="number" label="9" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.steps">
					<DefaultArg genus-name="number" label="200" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="stepper_4pin" kind="command" color="74 108 212"	label-prefix="" initlabel="bg.stepper_4pin">
			<description>
				<text>Stepper 4-Pin-wiring</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="Stepper#">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="Pin1#">
					<DefaultArg genus-name="number" label="8" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="Pin2#">
					<DefaultArg genus-name="number" label="9" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="Pin3#">
					<DefaultArg genus-name="number" label="10" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="Pin4#">
					<DefaultArg genus-name="number" label="11" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.steps">
					<DefaultArg genus-name="number" label="200" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="stepper_set_rpm" kind="command" color="74 108 212"	label-prefix="" initlabel="bg.stepper_set_rpm">
			<description>
				<text>Stepper set speed</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="Stepper #">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.speed">
					<DefaultArg genus-name="number" label="100" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="stepper_steps" kind="command" color="74 108 212"	label-prefix="" initlabel="bg.stepper_steps">
			<description>
				<text>Stepper set steps</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="Stepper #">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.steps">
					<DefaultArg genus-name="number" label="10" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="tone" kind="command" color="74 108 212" initlabel="tone">
			<description>
				<text>Generates a square wave of the specified frequency (and 50%
					duty cycle) on a pin.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="8" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.frequency">
					<DefaultArg genus-name="number" label="440" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="tone_time" kind="command" color="74 108 212" initlabel="tone">
			<description>
				<text>Generates a square wave of the specified frequency (and 50%
					duty cycle) on a pin.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="8" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.frequency">
					<DefaultArg genus-name="number" label="440" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.milliseconds">
					<DefaultArg genus-name="number" label="1000" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="no_tone" kind="command" color="74 108 212" initlabel="noTone">
			<description>
				<text>Stops the generation of a square wave triggered by tone().
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="8" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="neopixel_init" kind="command" color="74 108 212"	initlabel="bg.neopixel_init">
			<description>
				<text>neopixel_init</text>
			</description>
			<BlockConnectors>
				<!--<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>-->
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.Nb_of_Led">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<!--<BlockConnector connector-type="string"
					connector-kind="socket" label="bc.schnittstelle">
					<DefaultArg genus-name="string" label="NEO_KHZ800" />
				</BlockConnector>
				<BlockConnector connector-type="string"
					connector-kind="socket" label="bc.farbfolge">
					<DefaultArg genus-name="string" label="NEO_RGB" />
				</BlockConnector>-->
			</BlockConnectors>
			<Images>
				<Image>
					<FileLocation>com/ardublock/block/letsgoING/neopixel.png</FileLocation>
				</Image>
			</Images>
		</BlockGenus>
		<BlockGenus name="neopixel_pixel_color" kind="command" color="74 108 212" initlabel="bg.neopixel_pixel_color">
			<description>
				<text>neopixel_pixel_colorRGB</text>
			</description>
			<BlockConnectors>
				<!--<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>-->
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.Pixel_Nb">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.red">
					<DefaultArg genus-name="number" label="255" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.green">
					<DefaultArg genus-name="number" label="255" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.blue">
					<DefaultArg genus-name="number" label="255" />
				</BlockConnector>
			</BlockConnectors>
			<Images>
				<Image>
					<FileLocation>com/ardublock/block/letsgoING/neopixel.png</FileLocation>
				</Image>
			</Images>
		</BlockGenus>
		<BlockGenus name="neopixel_show" kind="command" color="74 108 212"	initlabel="bg.neopixel_show">
			<description>
				<text>neopixel_show</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
			</BlockConnectors>
			<Images>
				<Image>
					<FileLocation>com/ardublock/block/letsgoING/neopixel.png</FileLocation>
				</Image>
			</Images>
		</BlockGenus>
		<BlockGenus name="neopixel_brightness" kind="command"	color="74 108 212" initlabel="bg.neopixel_brightness">
			<description>
				<text>neopixel_brightness</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.brightness">
					<DefaultArg genus-name="number" label="255" />
				</BlockConnector>
			</BlockConnectors>
			<Images>
				<Image>
					<FileLocation>com/ardublock/block/letsgoING/neopixel.png</FileLocation>
				</Image>
			</Images>
		</BlockGenus>
		
		<!--****************** Input *************** -->
		<BlockGenus name="pin-read-digital" kind="data" color="44 165 226" initlabel="bg.pin-read-digital">
			<description>
				<text>Read digital from the pin</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="pin-read-digital-pullup" kind="command" color="44 165 226" initlabel="bg.pin-read-digital">
			<description>
				<text>write digital to pin</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="pin-read-analog" kind="data" color="44 165 226" initlabel="bg.pin-read-analog">
			<description>
				<text>Read analog value from pin</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number_analog">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="pin-mode-input" kind="command" color="44 165 226" initlabel="bg.pin-mode-input">
			<description>
				<text>set pinMode to INPUT</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Init1" kind="command" color="44 165 226" initlabel="bg.LGI_Qtouch_Init1">
			<description>
				<text>Generates a square wave of the specified frequency (and 50%
					duty cycle) on a pin.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.analogpin_number">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.analogpin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Init2" kind="command" color="44 165 226" initlabel="bg.LGI_Qtouch_Init2">
			<description>
				<text>Generates a square wave of the specified frequency (and 50%
					duty cycle) on a pin.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.analogpin_number">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.analogpin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Init3" kind="command" color="44 165 226" initlabel="bg.LGI_Qtouch_Init3">
			<description>
				<text>Generates a square wave of the specified frequency (and 50%
					duty cycle) on a pin.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.analogpin_number">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.analogpin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="LGI_Qtouch_Button1_getOffset" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Button1_getOffset" editable-label="yes" is-label-value="yes">
			<description>
				<text>get offset1 </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Button2_getOffset" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Button2_getOffset"	editable-label="yes" is-label-value="yes">
			<description>
				<text>get offset2 </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Button3_getOffset" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Button3_getOffset"	editable-label="yes" is-label-value="yes">
			<description>
				<text>get offset2 </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Button1_getRaw" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Button1_getRaw" editable-label="yes" is-label-value="yes">
			<description>
				<text>get offset1 </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Button2_getRaw" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Button2_getRaw" editable-label="yes" is-label-value="yes">
			<description>
				<text>get offset1 </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Button3_getRaw" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Button3_getRaw" editable-label="yes" is-label-value="yes">
			<description>
				<text>get offset1 </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Button1_isTouched" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Button1_isTouched"	editable-label="yes" is-label-value="yes">
			<description>
				<text>LGI_Qtouch_Button1_isTouched </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Button2_isTouched" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Button2_isTouched"	editable-label="yes" is-label-value="yes">
			<description>
				<text>LGI_Qtouch_Button1_isTouched </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Button3_isTouched" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Button3_isTouched"	editable-label="yes" is-label-value="yes">
			<description>
				<text>LGI_Qtouch_Button1_isTouched </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="LGI_Qtouch_Slider_Init" kind="command" color="44 165 226" initlabel="bg.LGI_Qtouch_Slider_Init">
			<description>
				<text>Generates a square wave of the specified frequency (and 50%
					duty cycle) on a pin.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.analogpin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.analogpin_number">
					<DefaultArg genus-name="number" label="3" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.analogpin_number">
					<DefaultArg genus-name="number" label="4" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Slider_getOffset1" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Slider_getOffset1"	editable-label="no" is-label-value="yes">
			<description>
				<text>get offset1 </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Slider_getOffset2" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Slider_getOffset2"	editable-label="no" is-label-value="yes">
			<description>
				<text>get offset2 </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Slider_getOffset3" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Slider_getOffset3" editable-label="no" is-label-value="yes">
			<description>
				<text>get offset3 </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Qtouch_Slider_getTouchPosition" kind="data"	color="44 165 226" initlabel="bg.LGI_Qtouch_Slider_getTouchPosition" editable-label="no" is-label-value="yes">
			<description>
				<text>touch position </text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="LGI_Ultrasonic" kind="data" color="44 165 226" initlabel="bg.LGI_Ultrasonic" editable-label="no" is-label-value="no" >
		  <description>
		    <text>Read digital value from pin</text>
		  </description>
		  <BlockConnectors>
		    <BlockConnector label="bc.pin_number" connector-type="number" connector-kind="socket" position-type="single">
		      <DefaultArg genus-name="number" label="2"/>
		    </BlockConnector>
		    <BlockConnector label="1" connector-type="number" connector-kind="plug" position-type="single"/>
		  </BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="dht_sensor_setup" kind="command" color="44 165 226" initlabel="bg.dht_sensor_setup">
			<description>
				<text>
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.pin_number">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.dhtType">
					<DefaultArg genus-name="number" label="11" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="dht_sensor_read_temp" kind="data"	color="44 165 226" initlabel="bg.dht_sensor_read_temp" editable-label="yes" is-label-value="yes">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="dht_sensor_read_humid" kind="data"	color="44 165 226" initlabel="bg.dht_sensor_read_humid" editable-label="yes" is-label-value="yes">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="dht_sensor_calc_index" kind="data" color="44 165 226" initlabel="bg.dht_sensor_calc_index">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug"  />
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.DHTtemp">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.DHThumid">
					<DefaultArg genus-name="number" label="3" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<!--****************** Logical Operators *************** -->
		<BlockGenus name="greater" kind="function" color="255 20 147" initlabel="bg.greater">
			<description>
				<text>is upper number greater then lower?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
					
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="less" kind="function" color="255 20 147" initlabel="bg.less">
			<description>
				<text>is upper number less then lower?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="equal" kind="function" color="255 20 147" initlabel="bg.equal">
			<description>
				<text>is upper number greater then lower?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="equal_digital" kind="function" color="255 20 147" initlabel="bg.equal_digital">
			<description>
				<text>is upper number greater then lower?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="boolean" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="boolean" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="greater_equal" kind="function" color="255 20 147" initlabel="bg.greater_equal">
			<description>
				<text>is upper number greater then lower?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="less_equal" kind="function" color="255 20 147" initlabel="bg.less_equal">
			<description>
				<text>is upper number greater then lower?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="not_equal" kind="function" color="255 20 147" initlabel="bg.not_equal">
			<description>
				<text>is upper number greater then lower?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="not_equal_digital" kind="function" color="255 20 147" initlabel="bg.not_equal_digital">
			<description>
				<text>is upper number greater then lower?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="boolean" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="boolean" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="and" kind="data" initlabel="bg.and" color="255 20 147">
			<description>
				<text>
					Reports true if both of the two conditions are true.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket" connector-type="boolean" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="or" kind="function" initlabel="bg.or" color="255 20 147">
			<description>
				<text>
					Reports true if one or both of the two conditions are true.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket" connector-type="boolean" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="not" kind="function" initlabel="bg.not" color="255 20 147">
			<description>
				<text>
					Reports the opposite of
					<arg n="1" />
					.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket" connector-type="boolean" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="equal_poly" kind="function" color="255 20 147" initlabel="bg.equal_poly">
			<description>
				<text>is upper number greater then lower?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="poly" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="poly" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="not_equal_poly" kind="function" color="255 20 147" initlabel="bg.not_equal_poly">
			<description>
				<text>is upper number greater then lower?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="poly" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="poly" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="bit_and" kind="function" color="255 20 147" initlabel="bg.bit_and">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" >					
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="bit_or" kind="function" color="255 20 147" initlabel="bg.bit_or">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" >		
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="bit_xor" kind="function" color="255 20 147" initlabel="bg.bit_xor">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" >					
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="bit_not" kind="function" color="255 20 147" initlabel="bg.bit_not">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" >					
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="bit_shift_left" kind="function" color="255 20 147" initlabel="bg.bit_shift_left">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" >					
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="bit_shift_right" kind="function" color="255 20 147" initlabel="bg.bit_shift_right">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" >					
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>		
		
		
		<!--****************** Mathematical Operators *************** -->
		<BlockGenus name="addition" kind="function" initlabel="bg.addition" color="160 32 240">
			<description>
				<text>
					Reports the sum of two numbers (
					<arg n="1" />
					+
					<arg n="2" />
					).
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subtraction" kind="function" initlabel="bg.subtraction" color="160 32 240">
			<description>
				<text>
					Reports the difference of two numbers (
					<arg n="1" />
					-
					<arg n="2" />
					).
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="multiplication" kind="function" initlabel="bg.multiplication" color="160 32 240">
			<description>
				<text>
					Reports the product of two numbers (
					<arg n="1" />
					x
					<arg n="2" />
					).
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="division" kind="function" initlabel="bg.division" color="160 32 240">
			<description>
				<text>
					Reports the quotient of two numbers (
					<arg n="1" />
					÷
					<arg n="2" />
					).
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="modulo" kind="function" color="160 32 240" initlabel="bg.modulo">
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="number" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket" connector-type="number" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="abs" kind="function" color="160 32 240" initlabel="bg.abs">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="pow" kind="function" color="160 32 240" initlabel="bg.pow">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.base" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.exponent" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sqrt" kind="function" color="160 32 240" initlabel="bg.sqrt">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sin" kind="function" color="160 32 240" initlabel="bg.sin">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cos" kind="function" color="160 32 240" initlabel="bg.cos">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="tan" kind="function" color="160 32 240" initlabel="bg.tan">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="random" kind="data" color="160 32 240" initlabel="bg.random">
			<description>
				<text>generate a random number less than the number</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.max">
					<DefaultArg genus-name="number" label="1024" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="random_range" kind="function" color="160 32 240" initlabel="bg.pow">
			<description>
				<text>Generate random number between min and (max - 1)</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.min" >
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.max" >
					<DefaultArg genus-name="number" label="10" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="min" kind="function" color="160 32 240" initlabel="bg.min">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="max" kind="function" color="160 32 240" initlabel="bg.max">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" >
					<DefaultArg genus-name="dummy" label="" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="map_common" kind="data" color="160 32 240" initlabel="bg.map_common">
			<description>
				<text>map value from [0, 1023] to [0, 255]</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="map" kind="function" color="160 32 240" initlabel="bg.map">
			<description>
				<text>map</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.fromLow">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.fromHigh">
					<DefaultArg genus-name="number" label="1023" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.toLow">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.toHigh">
					<DefaultArg genus-name="number" label="255" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="constrain" kind="function" color="160 32 240" initlabel="bg.constrain">
			<description>
				<text>Constrain a number between two values</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.value" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.low">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.high">
					<DefaultArg genus-name="number" label="255" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<!-- ******************** Cast *************** -->
		<BlockGenus name="cast_number" kind="data" initlabel="bg.cast_number" editable-label="no" is-label-value="yes" color="255 50 0">
			<description>
				<text>
					cast variable
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug"  />
				<BlockConnector connector-type="number" connector-kind="socket"  />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_number_byte" kind="data" initlabel="bg.cast_number_byte" editable-label="no" is-label-value="yes" color="255 50 0">
			<description>
				<text>
					cast variable
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug"  />
				<BlockConnector connector-type="number" connector-kind="socket"  />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_number_long" kind="data" initlabel="bg.cast_number_long" editable-label="no" is-label-value="yes" color="255 50 0">
			<description>
				<text>
					cast variable
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug"  />
				<BlockConnector connector-type="number" connector-kind="socket"  />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_number_float" kind="data" initlabel="bg.cast_number_float" editable-label="no" is-label-value="yes" color="255 50 0">
			<description>
				<text>
					cast variable
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug"  />
				<BlockConnector connector-type="number" connector-kind="socket"  />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_byte_char" kind="data" initlabel="bg.cast_byte_char" editable-label="no" is-label-value="yes" color="255 50 0">
			<description>
				<text>
					cast byte to stringvariable
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="plug"  />
				<BlockConnector connector-type="number" connector-kind="socket"  />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_char_byte" kind="data" initlabel="bg.cast_char_byte" editable-label="no" is-label-value="yes" color="255 50 0">
			<description>
				<text>
					cast byte to stringvariable
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug"  />
				<BlockConnector connector-type="poly" connector-kind="socket"  />
			</BlockConnectors>
		</BlockGenus>	
		<BlockGenus name="cast_low_int_char" kind="data" initlabel="bg.cast_low_int_char" editable-label="no" is-label-value="yes" color="255 50 0">
			<description>
				<text>
					cast lower byte of int to char
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="plug"  />
				<BlockConnector connector-type="number" connector-kind="socket"  />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_up_int_char" kind="data" initlabel="bg.cast_up_int_char" editable-label="no" is-label-value="yes" color="255 50 0">
			<description>
				<text>
					cast upper byte of int to char
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="plug"  />
				<BlockConnector connector-type="number" connector-kind="socket"  />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_char_int" kind="data" initlabel="bg.cast_char_int" editable-label="no" is-label-value="yes" color="255 50 0">
			<description>
				<text>
					cast 2 char to int 
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug"  />
				<BlockConnector connector-type="poly" connector-kind="socket" label="bc.upperByte"  />
				<BlockConnector connector-type="poly" connector-kind="socket" label="bc.lowerByte"  />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_byte_int" kind="data" initlabel="bg.cast_byte_int" editable-label="no" is-label-value="yes" color="255 50 0">
			<description>
				<text>
					cast 2 byte to int 
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug"  />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.upperByte"  />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.lowerByte"  />
			</BlockConnectors>
		</BlockGenus>
		
		<!--****************** Numbers/Constants *************** -->
		<BlockGenus name="millis" kind="data" color="255 153 204" initlabel="bg.millis">
			<description>
				<text>Time in milliseconds</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="digital-high" kind="data" color="255 0 0" initlabel="bg.digital-high">
			<description>
				<text>
					Pin HIGH
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="digital-low" kind="data" color="255 0 0" initlabel="bg.digital-low">
			<description>
				<text>
					Pin LOW
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="true" kind="data" initlabel="bg.true" color="255 0 0" editable-label="no">
			<description>
				<text>
					Reports the boolean true.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror"/>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="false" kind="data" initlabel="bg.false" color="255 0 0">
			<description>
				<text>
					Reports the boolean false.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="number" kind="data" color="255 0 0" initlabel="bg.number" editable-label="yes">
			<description>
				<text>
					Standard integer constant
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="char" kind="data" color="255 0 0" initlabel="bg.char" editable-label="yes">
			<description>
				<text>
					character
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="string" kind="data" color="255 0 0" initlabel="bg.string" editable-label="yes">
			<description>
				<text>string message</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>	
		<BlockGenus name="variable_digital" kind="data" initlabel="bg.variable_digital" editable-label="yes" is-label-value="yes" color="204 0 102">
			<description>
				<text>
					Digital Var
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="local_variable_digital" kind="data" initlabel="bg.local_variable_digital" editable-label="yes" is-label-value="yes" color="174 0 72">
			<description>
				<text>
					Digital Var
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="constant_digital" kind="data" initlabel="bg.constant_digital" editable-label="yes" is-label-value="yes" color="154 0 52">
			<description>
				<text>
					digital Const
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="variable_number" kind="data" initlabel="bg.variable_number" editable-label="yes" is-label-value="yes" color="204 0 102">
			<description>
				<text>
					Analog Var
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="local_variable_number" kind="data" initlabel="bg.local_variable_number" editable-label="yes" is-label-value="yes" color="174 0 72">
			<description>
				<text>
					local Analog Var
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="constant_number" kind="data" initlabel="bg.constant_number" editable-label="yes" is-label-value="yes" color="154 0 52">
			<description>
				<text>
					Analog Const
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="variable_char" kind="data" initlabel="bg.variable_char" editable-label="yes" is-label-value="yes" color="204 0 102">
			<description>
				<text>
					character variable
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="local_variable_char" kind="data" initlabel="bg.local_variable_char" editable-label="yes" is-label-value="yes" color="174 0 72">
			<description>
				<text>
					lokal character variable
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setter_variable_number" kind="command" color="255 0 0" initlabel="bg.setter_variable_number">
			<description>
				<text>set integer variable</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
					<DefaultArg genus-name="variable_number"  label="analoge_Variable"/>
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setter_variable_number_byte" kind="command" color="255 0 0" initlabel="bg.setter_variable_number_byte">
			<description>
				<text>set byte variable</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
					<DefaultArg genus-name="variable_number"  label="kurze_analoge_Variable"/>
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
	    <BlockGenus name="setter_variable_number_long" kind="command" color="255 0 0" initlabel="bg.setter_variable_number_long">
	      <description>
	        <text>set a large integer variable</text>
	      </description>
	      <BlockConnectors>
	        <BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
	          <DefaultArg genus-name="variable_number" label="lange_analoge_Variable" />
	        </BlockConnector>
	        <BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
	          <DefaultArg genus-name="number" label="1000000" />
	        </BlockConnector>
	      </BlockConnectors>
	    </BlockGenus>
	    <BlockGenus name="setter_variable_number_float" kind="command" color="255 0 0" initlabel="bg.setter_variable_number_float">
	      <description>
	        <text>set decimal variable</text>
	      </description>
	      <BlockConnectors>
	        <BlockConnector connector-type="number" connector-kind="socket" label="bc.variable">
	          <DefaultArg genus-name="variable_number" label="dezimale_analoge_Variable" />
	        </BlockConnector>
	        <BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
	          <DefaultArg genus-name="number" label="3.1415927" />
	        </BlockConnector>
	      </BlockConnectors>
	    </BlockGenus>
		<BlockGenus name="setter_variable_digital" kind="command" color="255 0 0" initlabel="bg.setter_variable_digital">
			<description>
				<text>write digital to pin</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.variable">
					<DefaultArg genus-name="variable_digital" label="digitale_Variable" />
				</BlockConnector>
				<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="true" label="true" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setter_variable_char" kind="command" color="255 0 0" initlabel="bg.setter_variable_char">
			<description>
				<text>create a vector of numbers</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="socket" label="bc.variable">
					<DefaultArg genus-name="variable_char" label="Zeichen_Variable" />
				</BlockConnector>
				<BlockConnector connector-type="poly" connector-kind="socket" label="char">
					<DefaultArg genus-name="char" label="A" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
	    <BlockGenus name="setter_variable_string" kind="command" color="255 0 0" initlabel="bg.setter_variable_string">
	      <description>
	        <text>set String variable</text>
	      </description>
	      <BlockConnectors>
	        <BlockConnector connector-type="string" connector-kind="socket" label="bc.variable">
	          <DefaultArg genus-name="variable_string" label="Zeichenketten_Variable" />
	        </BlockConnector>
	        <BlockConnector connector-type="string" connector-kind="socket" label="bc.value">
	          <DefaultArg genus-name="string" label="Beispieltext" />
	        </BlockConnector>
	      </BlockConnectors>
	    </BlockGenus>
		<BlockGenus name="variable_string" kind="data" initlabel="bg.variable_string" editable-label="yes" is-label-value="yes" color="204 0 102">
	      <description>
	        <text>
	          Variable String
	        </text>
	      </description>
	      <BlockConnectors>
	        <BlockConnector connector-type="string" connector-kind="plug" position-type="mirror" />
	      </BlockConnectors>
	    </BlockGenus>
		<BlockGenus name="local_variable_string" kind="data" initlabel="bg.local_variable_string" editable-label="yes" is-label-value="yes" color="174 0 72">
	      <description>
	        <text>
	          Variable String
	        </text>
	      </description>
	      <BlockConnectors>
	        <BlockConnector connector-type="string" connector-kind="plug" position-type="mirror" />
	      </BlockConnectors>
	    </BlockGenus>
		<BlockGenus name="variable_file" kind="data" initlabel="bg.variable_file" editable-label="yes" is-label-value="yes" color="204 0 102">
	      <description>
	        <text>
	          Variable File
	        </text>
	      </description>
	      <BlockConnectors>
	        <BlockConnector connector-type="string-list" connector-kind="plug" position-type="mirror" />
	      </BlockConnectors>
	    </BlockGenus>
		<BlockGenus name="local_variable_file" kind="data" initlabel="bg.local_variable_file" editable-label="yes" is-label-value="yes" color="174 0 72">
	      <description>
	        <text>
	          Variable File
	        </text>
	      </description>
	      <BlockConnectors>
	        <BlockConnector connector-type="string-list" connector-kind="plug" position-type="mirror" />
	      </BlockConnectors>
	    </BlockGenus>
		
		<!-- ******************** Arrays *************** -->
		<BlockGenus name="create_char_array" kind="command" color="200 0 0" initlabel="bg.create_char_array">
	      <description>
	        <text>set char array</text>
	      </description>
	      <BlockConnectors>
	        <BlockConnector connector-type="string" connector-kind="socket" label="bc.array">
	          <DefaultArg genus-name="variable_string" label="Name_der_Zeichenkette" />
	        </BlockConnector>
			<BlockConnector connector-type="number" connector-kind="socket" label="bc.number_chars">
	        </BlockConnector>
	        <BlockConnector connector-type="string" connector-kind="socket" label="bc.value">
	        </BlockConnector>
	      </BlockConnectors>
	    </BlockGenus>
		<BlockGenus name="read_char_array" kind="data" initlabel="bg.read_char_array" editable-label="no" is-label-value="yes" color="200 0 0">
			<description>
				<text>
					Array member value
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="plug" />
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.array">
					<DefaultArg genus-name="variable_string" label="Name_der_Zeichenkette" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.position">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setter_char_array" kind="command" color="200 0 0" initlabel="bg.setter_char_array">
			<description>
				<text>Set a array value</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.array">
					<DefaultArg genus-name="variable_string" label="Name_der_Zeichenkette" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.position">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="poly" connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="char" label="A" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="read_number_array" kind="data" initlabel="bg.read_number_array" editable-label="no" is-label-value="yes" color="200 0 0">
			<description>
				<text>
					Array member value
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.array">
					<DefaultArg genus-name="variable_number" label="Name_der_Tabelle" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.position">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setter_number_array" kind="command" color="200 0 0" initlabel="bg.setter_number_array">
			<description>
				<text>Set a vector number</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.array">
					<DefaultArg genus-name="variable_number" label="Name_der_Tabelle" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.position">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="create_number_array" kind="command" color="200 0 0" initlabel="bg.create_number_array">
			<description>
				<text>create a vector of numbers</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.array">
					<DefaultArg genus-name="variable_number" label="Name_der_Tabelle" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.vecsize">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
	    <BlockGenus name="create_number_byte_array" kind="command" color="200 0 0" initlabel="bg.create_number_byte_array">
			<description>
				<text>create a vector of numbers</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.array">
					<DefaultArg genus-name="variable_number" label="Name_der_Tabelle" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.vecsize">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
	    <BlockGenus name="create_number_long_array" kind="command" color="200 0 0" initlabel="bg.create_number_long_array">
			<description>
				<text>create a vector of numbers</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.array">
					<DefaultArg genus-name="variable_number" label="Name_der_Tabelle" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.vecsize">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
	    <BlockGenus name="create_number_float_array" kind="command" color="200 0 0" initlabel="bg.create_number_float_array">
			<description>
				<text>create a vector of numbers</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.array">
					<DefaultArg genus-name="variable_number" label="Name_der_Tabelle" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.vecsize">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
	    
		<!-- ******************** Communication *************** -->
		<BlockGenus name="serial_read" kind="data" color="165 42 42" initlabel="bg.serial_read">
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="serial_parseInt" kind="data" color="165 42 42" initlabel="bg.serial_parseInt">
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="serial_available" kind="data" color="165 42 42" initlabel="bg.serial_available">
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="serial_write" kind="command" color="165 42 42" initlabel="serial_write">
			<description>
				<text>send message via Serial port</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string" connector-kind="socket" >
					<DefaultArg genus-name="string" label="String" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="serial_print" kind="command" color="165 42 42" initlabel="bg.serial_print">
			<description>
				<text>send message via Serial port</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.message">
					<DefaultArg genus-name="string" label="Nachricht" />
				</BlockConnector>
				<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.ln">
					<DefaultArg genus-name="true" label="true" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="serial_begin" kind="command" color="165 42 42" initlabel="bg.serial_begin">
			<description>
				<text>begin Serial port</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.baudrate">
					<DefaultArg genus-name="number" label="9600" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="soft_serial_print" kind="command" color="165 42 42"	initlabel="bg.soft_serial_print">
					<description>
						<text>send message via Serial port</text>
					</description>
					<BlockConnectors>
						<BlockConnector connector-type="number"	connector-kind="socket" label="bc.rx_pin_number">
							<DefaultArg genus-name="number" label="10" />
						</BlockConnector>
						<BlockConnector connector-type="number"	connector-kind="socket" label="bc.tx_pin_number">
							<DefaultArg genus-name="number" label="11" />
						</BlockConnector>
						<BlockConnector connector-type="string" connector-kind="socket" label="bc.message">
							<DefaultArg genus-name="string" label="Nachricht" />
						</BlockConnector>
						<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.ln">
							<DefaultArg genus-name="true" label="true" />
						</BlockConnector>
					</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="soft_serial_begin" kind="command" color="165 42 42"	initlabel="bg.soft_serial_print">
			<description>
				<text>send message via Serial port</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.rx_pin_number">
					<DefaultArg genus-name="number" label="10" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.tx_pin_number">
					<DefaultArg genus-name="number" label="11" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.baudrate">
					<DefaultArg genus-name="number" label="4800" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="soft_serial_read" kind="data" color="165 42 42" initlabel="bg.soft_serial_read">
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="plug"  />
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.rx_pin_number">
					<DefaultArg genus-name="number" label="10" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.tx_pin_number">
					<DefaultArg genus-name="number" label="11" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="soft_serial_available" kind="data" color="165 42 42" initlabel="bg.soft_serial_available">
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" />
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.rx_pin_number">
					<DefaultArg genus-name="number" label="10" />
				</BlockConnector>
				<BlockConnector connector-type="number"	connector-kind="socket" label="bc.tx_pin_number">
					<DefaultArg genus-name="number" label="11" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="serialEvent" kind="command" color="255 215 0"	initlabel="bg.serialEvent" is-starter="yes" is-terminator="yes" label-unique="yes" editable-label="no">
			<description>
				<text>serialEvent</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.commands" connector-type="cmd"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>		
		<BlockGenus name="glue_digital" kind="data" color="165 42 42" initlabel="bg.glue_digital">
			<description>
				<text>glue boolean to string</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="string" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket" connector-type="string" position-type="bottom" />
				<BlockConnector connector-type="boolean" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="glue_number" kind="data" color="165 42 42" initlabel="bg.glue_number">
			<description>
				<text>glue number to string</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="string" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket" connector-type="string" position-type="bottom" />
				<BlockConnector connector-type="number" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>	
		<BlockGenus name="glue_char" kind="data" color="165 42 42" initlabel="bg.glue_char" editable-label="no">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="string" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket" connector-type="string" position-type="bottom" />
				<BlockConnector connector-type="poly" connector-kind="socket" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="glue_string" kind="data" color="165 42 42" initlabel="bg.glue_string">
			<description>
				<text>glue string to string</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug" connector-type="string" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket" connector-type="string" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket" connector-type="string" position-type="bottom" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="tele_set_frame" kind="command" color="165 42 42" initlabel="bg.tele_set_frame">
			<description>
				<text>write Data to telegram frame</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.sendAddress">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.recAddress">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="poly" connector-kind="socket" label="bc.command">
					<DefaultArg genus-name="char" label="@" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.dataLength">
					<DefaultArg genus-name="number" label="3" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.payload">
					<DefaultArg genus-name="variable_string" label="Nutzdaten_Puffer_Variable" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.sendBuffer">
					<DefaultArg genus-name="variable_string" label="Sendedaten_Puffer_Variable" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="tele_read_frame" kind="command" color="165 42 42" initlabel="tele_read_frame">
			<description>
				<text>read telegram data from Serial</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="socket" label="bc.nextChar"/>
				<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.dataComplete">
					<DefaultArg genus-name="variable_digital" label="datenKomplettVariable" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.recChars">
					<DefaultArg genus-name="variable_number" label="empfangeneZeichenVariable" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.recBuffer">
					<DefaultArg genus-name="variable_string" label="empfangsdatenPufferVariable" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="tele_read_data_frame" kind="command" color="165 42 42" initlabel="tele_read_data_frame">
			<description>
				<text>read data from telegram frame</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.sendAddress">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.recAddress">
					<DefaultArg genus-name="number" label="2" />
				</BlockConnector>
				<BlockConnector connector-type="poly" connector-kind="socket" label="bc.command">
					<DefaultArg genus-name="variable_char" label="befehlVariable" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.payload">
					<DefaultArg genus-name="variable_string" label="nutzdatenPufferVariable" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.recFrame">
					<DefaultArg genus-name="variable_string" label="empfangsdatenPufferVariable" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="mqtt_set_frame" kind="command" color="165 42 42" initlabel="bg.mqtt_set_frame">
			<description>
				<text>write data to MQTT frame</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.topicLength">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.topic">
					<DefaultArg genus-name="variable_string" label="meinTopic" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.payloadLength">
					<DefaultArg genus-name="number" label="3" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.payload">
					<DefaultArg genus-name="variable_string" label="nutzdatenPufferVariable" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.sendBuffer">
					<DefaultArg genus-name="variable_string" label="sendedatenPufferVariable" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="mqtt_read_frame" kind="command" color="165 42 42" initlabel="bg.mqtt_read_frame">
			<description>
				<text>read data from MQTT frame</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.topicLength">
					<DefaultArg genus-name="variable_number" label="längeTopicVariable" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.topic">
					<DefaultArg genus-name="variable_string" label="topicVariable" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.payloadLength">
					<DefaultArg genus-name="variable_number" label="längeNutzdatenVariable" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.payload">
					<DefaultArg genus-name="variable_string" label="nutzdatenPufferVariable" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.recBuffer">
					<DefaultArg genus-name="variable_string" label="empfangsdatenPufferVariable" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<!-- ******************** Storage *************** -->
		<BlockGenus name="eeprom_read" kind="data" color="0 32 96" initlabel="bg.eeprom_read">
			<description>
				<text>EEPROM Read</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="eeprom_write" kind="command" color="0 32 96" initlabel="bg.eeprom_write">
			<description>
				<text>EEPROM Write</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_data">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="eeprom_get" kind="data" color="0 32 96" initlabel="bg.eeprom_get">
			<description>
				<text>EEPROM GET</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="eeprom_put" kind="command" color="0 32 96" initlabel="bg.eeprom_put">
			<description>
				<text>EEPROM PUT</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_data">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>	
		<BlockGenus name="eeprom_length" kind="data" color="0 32 96" initlabel="bg.eeprom_length">
			<description>
				<text>EEPROM Length</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.eeprom_address">
				<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sd_begin" kind="command" color="0 32 96" initlabel="bg.sd_begin">
			<description>
				<text>start SD card</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.sdCSPin">
					<DefaultArg genus-name="number" label="10" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sd_open" kind="command" color="0 32 96" initlabel="bg.sd_open">
			<description>
				<text>Open file on SD card</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string-list" connector-kind="socket" label="bc.sdFileVar">
					<DefaultArg genus-name="local_variable_file" label="datei_Variable" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.sdFileName">
					<DefaultArg genus-name="string" label="daten.txt" />
				</BlockConnector>
				<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.sdFileMode">
					<DefaultArg genus-name="true" label="true" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sd_close" kind="command" color="0 32 96" initlabel="bg.sd_close">
			<description>
				<text>Close file on SD card</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string-list" connector-kind="socket" label="bc.sdFileVar">
					<DefaultArg genus-name="local_variable_file" label="datei_Variable" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sd_write" kind="command" color="0 32 96" initlabel="bg.sd_write">
			<description>
				<text>Write to SD card</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string-list" connector-kind="socket" label="bc.sdFileVar">
					<DefaultArg genus-name="local_variable_file" label="datei_Variable" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.sdWriteData">
					<DefaultArg genus-name="string" label="Daten" />
				</BlockConnector>
				<BlockConnector connector-type="boolean" connector-kind="socket" label="bc.ln">
					<DefaultArg genus-name="true" label="true" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sd_read" kind="data" color="0 32 96" initlabel="bg.sd_read">
			<description>
				<text>Read from SD card</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="poly" connector-kind="plug" />
				<BlockConnector connector-type="string-list" connector-kind="socket" label="bc.sdFileVar">
					<DefaultArg genus-name="local_variable_file" label="datei_Variable" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sd_data_available" kind="data" color="0 32 96" initlabel="bg.sd_data_available">
			<description>
				<text>Data available on SD-Card</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number" connector-kind="plug" />
				<BlockConnector connector-type="string-list" connector-kind="socket" label="bc.sdFileVar">
					<DefaultArg genus-name="local_variable_file" label="datei_Variable" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sd_file_available" kind="data" color="0 32 96" initlabel="bg.sd_file_available">
			<description>
				<text>File is available</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean" connector-kind="plug" />
				<BlockConnector connector-type="string-list" connector-kind="socket" label="bc.sdFileVar">
					<DefaultArg genus-name="local_variable_file" label="datei_Variable" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		
		<!-- ******************** Code Menu *************** -->
		<BlockGenus name="program_comment" kind="command" color="0 176 80" initlabel="bg.program_comment" is-starter="yes" is-terminator="yes" label-unique="no">
			<description>
				<text>add comment</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.prog_name">
					<DefaultArg genus-name="string" label="Dateiname/Programmbezeichnung" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.prog_author">
					<DefaultArg genus-name="string" label="Name oder Kuerzel" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.prog_description">
					<DefaultArg genus-name="string" label="Kurzbeschreibung Programmfunktion" />
				</BlockConnector>
				<BlockConnector connector-type="string" connector-kind="socket" />
				<BlockConnector connector-type="string" connector-kind="socket" />
				<BlockConnector connector-type="string" connector-kind="socket" label="bc.prog_date">
					<DefaultArg genus-name="string" label="01.01.2019" />
				</BlockConnector>
				<BlockConnector connector-type="number" connector-kind="socket" label="bc.prog_version">
					<DefaultArg genus-name="number" label="0.1" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="code_loop" kind="command" color="0 176 80" initlabel="bg.code_loop">
			<description>
				<text>add custom code</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string" connector-kind="socket">
					<DefaultArg genus-name="string" label="i = 1;" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="code_head" kind="command" color="0 176 80" initlabel="bg.code_head">
			<description>
				<text>add custom code</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string" connector-kind="socket">
					<DefaultArg genus-name="string" label="int i = 0;" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="code_comment_head" kind="command" color="0 176 80" initlabel="bg.code_comment_head">
			<description>
				<text>add comment to program head</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string" connector-kind="socket">
					<DefaultArg genus-name="string" label="Kommentartext;" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="code_comment" kind="command" color="0 176 80" initlabel="bg.code_comment">
			<description>
				<text>add comment</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string" connector-kind="socket">
					<DefaultArg genus-name="string" label="Kommentartext" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
	</BlockGenuses>
	
	<!-- Start of Ardublock Standard UI layout -->
	<BlockFamilies>
		<BlockFamily>
			<FamilyMember>cast_number</FamilyMember>
			<FamilyMember>cast_number_byte</FamilyMember>
			<FamilyMember>cast_number_long</FamilyMember>
			<FamilyMember>cast_number_float</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>digital-high</FamilyMember>
			<FamilyMember>digital-low</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>and</FamilyMember>
			<FamilyMember>or</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>true</FamilyMember>
			<FamilyMember>false</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>addition</FamilyMember>
			<FamilyMember>subtraction</FamilyMember>
			<FamilyMember>multiplication</FamilyMember>
			<FamilyMember>division</FamilyMember>
			<FamilyMember>modulo</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>min</FamilyMember>
			<FamilyMember>max</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>greater</FamilyMember>
			<FamilyMember>less</FamilyMember>
			<FamilyMember>equal</FamilyMember>
			<FamilyMember>greater_equal</FamilyMember>
			<FamilyMember>less_equal</FamilyMember>
			<FamilyMember>not_equal</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>bit_and</FamilyMember>
			<FamilyMember>bit_or</FamilyMember>
			<FamilyMember>bit_xor</FamilyMember>
			<FamilyMember>bit_not</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>bit_shift_left</FamilyMember>
			<FamilyMember>bit_shift_right</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>equal_digital</FamilyMember>
			<FamilyMember>not_equal_digital</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>equal_poly</FamilyMember>
			<FamilyMember>not_equal_poly</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>sin</FamilyMember>
			<FamilyMember>cos</FamilyMember>
			<FamilyMember>tan</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>cast_up_int_char</FamilyMember>
			<FamilyMember>cast_low_int_char</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>code_head</FamilyMember>
			<FamilyMember>code_loop</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>code_comment</FamilyMember>
			<FamilyMember>code_comment_head</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>LGI_Qtouch_Init1</FamilyMember>
			<FamilyMember>LGI_Qtouch_Init2</FamilyMember>
			<FamilyMember>LGI_Qtouch_Init3</FamilyMember>			
		</BlockFamily>		
		<BlockFamily>
			<FamilyMember>LGI_Qtouch_Button1_getOffset</FamilyMember>
			<FamilyMember>LGI_Qtouch_Button2_getOffset</FamilyMember>
			<FamilyMember>LGI_Qtouch_Button3_getOffset</FamilyMember>			
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>LGI_Qtouch_Button1_getRaw</FamilyMember>
			<FamilyMember>LGI_Qtouch_Button2_getRaw</FamilyMember>
			<FamilyMember>LGI_Qtouch_Button3_getRaw</FamilyMember>			
		</BlockFamily>
	</BlockFamilies>
		<BlockDrawerSets>	
		<BlockDrawerSet name="factory" type="stack" location="southwest" window-per-drawer="no" drawer-draggable="no">
			<BlockDrawer button-color="74 108 212" name="bd.tetrapix" type="default">
				<BlockGenusMember>neopixel_init</BlockGenusMember>
				<BlockGenusMember>neopixel_pixel_color</BlockGenusMember>
				<!-- <BlockGenusMember>neopixel_brightness</BlockGenusMember>
				<BlockGenusMember>neopixel_show</BlockGenusMember>	-->
				<BlockGenusMember>repeat_times</BlockGenusMember>
				<BlockGenusMember>repeat_control</BlockGenusMember>
				<BlockGenusMember>delay</BlockGenusMember>
				
			</BlockDrawer>
			<BlockDrawer button-color="74 108 212" name="bd.tetrapix" type="custom">
				<BlockGenusMember>if</BlockGenusMember>
				<BlockGenusMember>ifelse</BlockGenusMember>
				<BlockGenusMember>while</BlockGenusMember>
				
			</BlockDrawer>
			<BlockDrawer button-color="255 215 0" name="bd.control" type="default"> 
				<!-- <BlockGenusMember>program</BlockGenusMember> -->
				<BlockGenusMember>loop</BlockGenusMember>
				<BlockGenusMember>sketch</BlockGenusMember>
				
				<BlockGenusMember>if</BlockGenusMember>
				<BlockGenusMember>ifelse</BlockGenusMember>
				<BlockGenusMember>while</BlockGenusMember>
				
				<BlockGenusMember>repeat_times</BlockGenusMember>
				<BlockGenusMember>repeat</BlockGenusMember>
				
				<BlockGenusMember>delay</BlockGenusMember>
				<BlockGenusMember>wait</BlockGenusMember>
				
				<BlockGenusMember>subroutine_com</BlockGenusMember>
				<BlockGenusMember>subroutine-ref</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="255 215 0" name="bd.control" type="custom"> 
				<!-- <BlockGenusMember>program</BlockGenusMember> -->
				<BlockGenusMember>loop</BlockGenusMember>
				<BlockGenusMember>sketch</BlockGenusMember>
				
				<BlockGenusMember>if</BlockGenusMember>
				<BlockGenusMember>ifelse</BlockGenusMember>
				<BlockGenusMember>while</BlockGenusMember>
				
				<BlockGenusMember>repeat_times</BlockGenusMember>
				<BlockGenusMember>repeat</BlockGenusMember>
				<BlockGenusMember>break</BlockGenusMember>
				
				<BlockGenusMember>delay</BlockGenusMember>
				<BlockGenusMember>delay_microseconds</BlockGenusMember>
				<BlockGenusMember>wait</BlockGenusMember>
				
				<BlockGenusMember>subroutine_com</BlockGenusMember>
				<BlockGenusMember>subroutine-ref</BlockGenusMember>
				<BlockGenusMember>subroutine_var_com</BlockGenusMember>
				<BlockGenusMember>subroutine-ref_var</BlockGenusMember>
				<BlockGenusMember>subroutine_varret_com</BlockGenusMember>
				<BlockGenusMember>subroutine-ref_varret</BlockGenusMember>
				
				<BlockGenusMember>interrupt</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="74 108 212" name="bd.output"	type="default">
				<BlockGenusMember>pin-write-digital</BlockGenusMember>
				<BlockGenusMember>pin-write-analog</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="74 108 212" name="bd.output"	type="custom">
				<BlockGenusMember>pin-write-digital</BlockGenusMember>
				<BlockGenusMember>pin-write-analog</BlockGenusMember>
				<BlockGenusMember>pin-mode-output</BlockGenusMember>
				
				<BlockGenusMember>neopixel_init</BlockGenusMember>
				<BlockGenusMember>neopixel_pixel_color</BlockGenusMember>
				<BlockGenusMember>neopixel_brightness</BlockGenusMember>
				<BlockGenusMember>neopixel_show</BlockGenusMember>				
				
				<BlockGenusMember>tone</BlockGenusMember>
				<BlockGenusMember>tone_time</BlockGenusMember>
				<BlockGenusMember>no_tone</BlockGenusMember>

				<BlockGenusMember>servo_default</BlockGenusMember>
				<BlockGenusMember>detach_servo_default</BlockGenusMember>
				<BlockGenusMember>attach_servo_default</BlockGenusMember>	
				
				<BlockGenusMember>stepper_2pin</BlockGenusMember>
				<BlockGenusMember>stepper_4pin</BlockGenusMember>
				<BlockGenusMember>stepper_set_rpm</BlockGenusMember>
				<BlockGenusMember>stepper_steps</BlockGenusMember>
			</BlockDrawer>
			
			<BlockDrawer button-color="44 165 226" name="bd.input" type="default">
				<BlockGenusMember>pin-read-digital</BlockGenusMember>
				<BlockGenusMember>pin-read-analog</BlockGenusMember>
				<BlockGenusMember>pin-read-digital-pullup</BlockGenusMember>	
			</BlockDrawer>
			<BlockDrawer button-color="44 165 226" name="bd.input" type="custom">
				<BlockGenusMember>pin-read-digital</BlockGenusMember>
				<BlockGenusMember>pin-read-analog</BlockGenusMember>
				<BlockGenusMember>pin-read-digital-pullup</BlockGenusMember>
				<BlockGenusMember>pin-mode-input</BlockGenusMember>

				<BlockGenusMember>LGI_Ultrasonic</BlockGenusMember>  				
				
				<BlockGenusMember>LGI_Qtouch_Init1</BlockGenusMember>
				<BlockGenusMember>LGI_Qtouch_Button1_getOffset</BlockGenusMember>
				<BlockGenusMember>LGI_Qtouch_Button1_getRaw</BlockGenusMember>
				<BlockGenusMember>LGI_Qtouch_Button1_isTouched</BlockGenusMember>
				
				<BlockGenusMember>dht_sensor_setup</BlockGenusMember>
				<BlockGenusMember>dht_sensor_read_temp</BlockGenusMember>
				<BlockGenusMember>dht_sensor_read_humid</BlockGenusMember>
				<BlockGenusMember>dht_sensor_calc_index</BlockGenusMember>
			</BlockDrawer>
			
			<BlockDrawer button-color="255 20 147" name="bd.logic" type="default">
				<BlockGenusMember>and</BlockGenusMember>
				<BlockGenusMember>or</BlockGenusMember>
				<BlockGenusMember>not</BlockGenusMember>
				
				<BlockGenusMember>equal_digital</BlockGenusMember>
				<BlockGenusMember>not_equal_digital</BlockGenusMember>
				
				<BlockGenusMember>greater</BlockGenusMember>
				<BlockGenusMember>less</BlockGenusMember>
				<BlockGenusMember>equal</BlockGenusMember>
				<BlockGenusMember>greater_equal</BlockGenusMember>
				<BlockGenusMember>less_equal</BlockGenusMember>
				<BlockGenusMember>not_equal</BlockGenusMember>
				
				<BlockGenusMember>equal_poly</BlockGenusMember>
				<BlockGenusMember>not_equal_poly</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="255 20 147" name="bd.logic" type="custom">
				<BlockGenusMember>and</BlockGenusMember>
				<BlockGenusMember>or</BlockGenusMember>
				<BlockGenusMember>not</BlockGenusMember>
				
				<BlockGenusMember>equal_digital</BlockGenusMember>
				<BlockGenusMember>not_equal_digital</BlockGenusMember>
				
				<BlockGenusMember>greater</BlockGenusMember>
				<BlockGenusMember>less</BlockGenusMember>
				<BlockGenusMember>equal</BlockGenusMember>
				<BlockGenusMember>greater_equal</BlockGenusMember>
				<BlockGenusMember>less_equal</BlockGenusMember>
				<BlockGenusMember>not_equal</BlockGenusMember>
							
				<BlockGenusMember>equal_poly</BlockGenusMember>
				<BlockGenusMember>not_equal_poly</BlockGenusMember>
				
				<BlockGenusMember>bit_and</BlockGenusMember>
				<BlockGenusMember>bit_or</BlockGenusMember>
				<BlockGenusMember>bit_xor</BlockGenusMember>
				<BlockGenusMember>bit_not</BlockGenusMember>
				
				<BlockGenusMember>bit_shift_left</BlockGenusMember>
				<BlockGenusMember>bit_shift_right</BlockGenusMember>
			</BlockDrawer>
			
			<BlockDrawer button-color="160 32 240" name="bd.operators"	type="default">
				<BlockGenusMember>addition</BlockGenusMember>
				<BlockGenusMember>subtraction</BlockGenusMember>
				<BlockGenusMember>multiplication</BlockGenusMember>
				<BlockGenusMember>division</BlockGenusMember>
				
				<BlockGenusMember>modulo</BlockGenusMember>
				<BlockGenusMember>abs</BlockGenusMember>
				
				<BlockGenusMember>map_common</BlockGenusMember>
				<BlockGenusMember>map</BlockGenusMember>
				<BlockGenusMember>constrain</BlockGenusMember>
				
				<BlockGenusMember>random</BlockGenusMember>
				<BlockGenusMember>random_range</BlockGenusMember>
				
				<BlockGenusMember>min</BlockGenusMember>
				<BlockGenusMember>max</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="160 32 240" name="bd.operators"	type="custom">
				<BlockGenusMember>addition</BlockGenusMember>
				<BlockGenusMember>subtraction</BlockGenusMember>
				<BlockGenusMember>multiplication</BlockGenusMember>
				<BlockGenusMember>division</BlockGenusMember>
				
				<BlockGenusMember>modulo</BlockGenusMember>
				<BlockGenusMember>abs</BlockGenusMember>
				<BlockGenusMember>pow</BlockGenusMember>
				<BlockGenusMember>sqrt</BlockGenusMember>
				
				<BlockGenusMember>sin</BlockGenusMember>
				<BlockGenusMember>cos</BlockGenusMember>
				<BlockGenusMember>tan</BlockGenusMember>
				
				<BlockGenusMember>map_common</BlockGenusMember>
				<BlockGenusMember>map</BlockGenusMember>
				<BlockGenusMember>constrain</BlockGenusMember>
				
				<BlockGenusMember>random</BlockGenusMember>
				<BlockGenusMember>random_range</BlockGenusMember>
				<BlockGenusMember>min</BlockGenusMember>
				<BlockGenusMember>max</BlockGenusMember>
			</BlockDrawer>
			
			<BlockDrawer button-color="255 50 0" name="bd.cast" type="custom">
				<BlockGenusMember>cast_number</BlockGenusMember>
				<BlockGenusMember>cast_number_byte</BlockGenusMember>
				<BlockGenusMember>cast_number_long</BlockGenusMember>
				<BlockGenusMember>cast_number_float</BlockGenusMember>
				
				<BlockGenusMember>cast_up_int_char</BlockGenusMember>	
				<BlockGenusMember>cast_low_int_char</BlockGenusMember>
				
				<BlockGenusMember>cast_byte_char</BlockGenusMember>
				<BlockGenusMember>cast_char_byte</BlockGenusMember>
				
				<BlockGenusMember>cast_char_int</BlockGenusMember>
				<BlockGenusMember>cast_byte_int</BlockGenusMember>
			</BlockDrawer>
			
			<BlockDrawer button-color="255 0 0" name="bd.number" type="default">
				<BlockGenusMember>millis</BlockGenusMember>
			
				<BlockGenusMember>setter_variable_digital</BlockGenusMember>
				<BlockGenusMember>variable_digital</BlockGenusMember>
				<BlockGenusMember>digital-high</BlockGenusMember>
				<BlockGenusMember>digital-low</BlockGenusMember>
				<BlockGenusMember>true</BlockGenusMember>
				<BlockGenusMember>false</BlockGenusMember>
				
				<BlockGenusMember>setter_variable_number</BlockGenusMember>	
				<BlockGenusMember>variable_number</BlockGenusMember>	
				<BlockGenusMember>number</BlockGenusMember>
				<!--
				<BlockGenusMember>setter_variable_char</BlockGenusMember>
				<BlockGenusMember>variable_char</BlockGenusMember>
				<BlockGenusMember>char</BlockGenusMember>-->
				
				<BlockGenusMember>string</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="255 0 0" name="bd.number" type="custom">
				<BlockGenusMember>millis</BlockGenusMember>
				<BlockGenusMember>setter_variable_digital</BlockGenusMember>
				<BlockGenusMember>variable_digital</BlockGenusMember>
				<BlockGenusMember>local_variable_digital</BlockGenusMember>
				<BlockGenusMember>constant_digital</BlockGenusMember>	
				<BlockGenusMember>digital-high</BlockGenusMember>
				<BlockGenusMember>digital-low</BlockGenusMember>
				<BlockGenusMember>true</BlockGenusMember>
				<BlockGenusMember>false</BlockGenusMember>
				
				<BlockGenusMember>setter_variable_number</BlockGenusMember>
				<BlockGenusMember>setter_variable_number_byte</BlockGenusMember>					
				<BlockGenusMember>setter_variable_number_long</BlockGenusMember>	
				<BlockGenusMember>setter_variable_number_float</BlockGenusMember>
				<BlockGenusMember>variable_number</BlockGenusMember>	
				<BlockGenusMember>local_variable_number</BlockGenusMember>
				<BlockGenusMember>constant_number</BlockGenusMember>			
				<BlockGenusMember>number</BlockGenusMember>
				
				<BlockGenusMember>setter_variable_char</BlockGenusMember>
				<BlockGenusMember>variable_char</BlockGenusMember>
				<BlockGenusMember>local_variable_char</BlockGenusMember>
				<BlockGenusMember>char</BlockGenusMember>	
				
				<BlockGenusMember>variable_string</BlockGenusMember>
				<BlockGenusMember>local_variable_string</BlockGenusMember>
				<BlockGenusMember>string</BlockGenusMember>
				
				<BlockGenusMember>variable_file</BlockGenusMember>
				<BlockGenusMember>local_variable_file</BlockGenusMember>
			</BlockDrawer>
			
			<BlockDrawer button-color="200 0 0" name="bd.array" type="custom">							
				<BlockGenusMember>create_number_array</BlockGenusMember>
				<BlockGenusMember>create_number_byte_array</BlockGenusMember>
				<BlockGenusMember>create_number_long_array</BlockGenusMember>
				<BlockGenusMember>create_number_float_array</BlockGenusMember>
				<BlockGenusMember>setter_number_array</BlockGenusMember>
				<BlockGenusMember>read_number_array</BlockGenusMember>
				
				<BlockGenusMember>create_char_array</BlockGenusMember>
				<BlockGenusMember>setter_char_array</BlockGenusMember>
				<BlockGenusMember>read_char_array</BlockGenusMember>
			</BlockDrawer>
			
			<BlockDrawer button-color="165 42 42" name="bd.communication" type="default">
				<BlockGenusMember>serial_print</BlockGenusMember>
				<BlockGenusMember>soft_serial_print</BlockGenusMember>

				<BlockGenusMember>glue_digital</BlockGenusMember>
				<BlockGenusMember>glue_number</BlockGenusMember>
				<BlockGenusMember>glue_string</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="165 42 42" name="bd.communication" type="custom">
				<BlockGenusMember>serial_begin</BlockGenusMember>
				<BlockGenusMember>serial_read</BlockGenusMember>
				<BlockGenusMember>serial_print</BlockGenusMember>
				<BlockGenusMember>serial_available</BlockGenusMember>
				
				<BlockGenusMember>serial_parseInt</BlockGenusMember>
				<BlockGenusMember>serialEvent</BlockGenusMember>
				
				<BlockGenusMember>soft_serial_begin</BlockGenusMember>
				<BlockGenusMember>soft_serial_read</BlockGenusMember>
				<BlockGenusMember>soft_serial_print</BlockGenusMember>
				<BlockGenusMember>soft_serial_available</BlockGenusMember>

				<BlockGenusMember>glue_digital</BlockGenusMember>
				<BlockGenusMember>glue_number</BlockGenusMember>
				<BlockGenusMember>glue_char</BlockGenusMember>
				<BlockGenusMember>glue_string</BlockGenusMember>
				
				<BlockGenusMember>tele_set_frame</BlockGenusMember>
				<BlockGenusMember>tele_read_frame</BlockGenusMember>
				<BlockGenusMember>tele_read_data_frame</BlockGenusMember>
				
				<BlockGenusMember>mqtt_set_frame</BlockGenusMember>
				<BlockGenusMember>mqtt_read_frame</BlockGenusMember>
			</BlockDrawer>
			
			<BlockDrawer button-color="0 32 96" name="bd.storage" type="custom">
				<BlockGenusMember>eeprom_read</BlockGenusMember>
				<BlockGenusMember>eeprom_write</BlockGenusMember>
				<BlockGenusMember>eeprom_get</BlockGenusMember>
				<BlockGenusMember>eeprom_put</BlockGenusMember>
				<BlockGenusMember>eeprom_length</BlockGenusMember>
				
				<BlockGenusMember>sd_begin</BlockGenusMember>
				<BlockGenusMember>sd_open</BlockGenusMember>
				<BlockGenusMember>sd_close</BlockGenusMember>
				<BlockGenusMember>sd_write</BlockGenusMember>
				<BlockGenusMember>sd_read</BlockGenusMember>
				<BlockGenusMember>sd_data_available</BlockGenusMember>
				<BlockGenusMember>sd_file_available</BlockGenusMember>
			</BlockDrawer>
			
			<BlockDrawer button-color="0 176 80" name="bd.code" type="default">
				<BlockGenusMember>program_comment</BlockGenusMember>
				<BlockGenusMember>code_comment</BlockGenusMember>
				<BlockGenusMember>code_comment_head</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="0 176 80" name="bd.code" type="custom">
				<BlockGenusMember>program_comment</BlockGenusMember>
				<BlockGenusMember>code_loop</BlockGenusMember>
				<BlockGenusMember>code_comment</BlockGenusMember>
				<BlockGenusMember>code_head</BlockGenusMember>
				<BlockGenusMember>code_comment_head</BlockGenusMember>
			</BlockDrawer>
			
			<!-- Shapes are automatically loaded as blocks in the Shapes drawer (see slcodeblocks.ShapeBlocksGenerator for details) -->
			<!-- Sound blocks reside in the auto-generated String drawer. (see slcodeblocks.SoundBlocksGenerator for details) -->
		</BlockDrawerSet>
	</BlockDrawerSets>
	
	<!-- End of Ardublock Standard UI layout -->

	<Pages drawer-with-page="yes">
		<Page page-name="Main" page-width="400" page-color="128 128 128"/>
	</Pages>

	<TrashCan>
		<OpenTrashImage>com/ardublock/block/trash_open.png</OpenTrashImage>
		<ClosedTrashImage>com/ardublock/block/trash.png</ClosedTrashImage>
	</TrashCan>

</BlockLangDef>
